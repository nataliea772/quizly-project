name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        known_hosts: unnecessary
        if_key_exists: replace

    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        # Create remote directory and copy files
        ssh $EC2_USER@$EC2_HOST 'mkdir -p ~/quizapp'
        rsync -avz --delete ./out/ $EC2_USER@$EC2_HOST:~/quizapp/out/
        rsync -avz server.js package.json package-lock.json nginx.conf $EC2_USER@$EC2_HOST:~/quizapp/

        # Create deployment script
        cat > deploy.sh << 'EOF'
        cd ~/quizapp

        # Install Node.js if not present
        if ! command -v node &> /dev/null; then
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
        fi

        # Install Nginx if not present
        if ! command -v nginx &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y nginx
        fi

        # Install PM2 if not present
        if ! command -v pm2 &> /dev/null; then
          sudo npm install -g pm2
        fi

        # Install dependencies
        npm ci --production

        # Configure Nginx
        sudo cp nginx.conf /etc/nginx/sites-available/quizapp
        sudo ln -sf /etc/nginx/sites-available/quizapp /etc/nginx/sites-enabled/
        sudo rm -f /etc/nginx/sites-enabled/default
        sudo nginx -t && sudo systemctl restart nginx

        # Start application
        pm2 delete quizapp || true
        pm2 start server.js --name quizapp
        pm2 save
        EOF

        # Execute deployment script
        ssh $EC2_USER@$EC2_HOST 'bash -s' < deploy.sh
